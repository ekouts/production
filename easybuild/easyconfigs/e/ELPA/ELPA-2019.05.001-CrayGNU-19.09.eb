#http://elpa.mpcdf.mpg.de/html/Releases/2017.11.001/elpa-2017.11.001.tar.gz
easyblock = 'ConfigureMake'

name = 'ELPA'
version = '2019.05.001'

homepage = 'http://elpa.rzg.mpg.de'
description = "Eigenvalue SoLvers for Petaflop-Applications ."

toolchain = {'name': 'CrayGNU', 'version': '19.09'}
toolchainopts = {'usempi': True, 'openmp': True}

source_urls = ['http://%(namelower)s.mpcdf.mpg.de/html/Releases/%(version)s/']
sources = [SOURCELOWER_TAR_GZ]

builddependencies = [
    ('intel/19.0.1.144', EXTERNAL_MODULE),
]
dependencies = [
    ('intel/19.0.1.144', EXTERNAL_MODULE),
]

preconfigopts = ' module unload cray-libsci && module load gcc/8.3.0 && module list && CC=cc FC=ftn CPP=cpp FCPP=cpp  LIBS="-L$MKLROOT/lib/intel64 -lmkl_scalapack_lp64 -lmkl_intel_lp64 -lmkl_gnu_thread -lmkl_core -lmkl_blacs_intelmpi_lp64 -lpthread -lstdc++ -ldl"  FCFLAGS="-fopenmp -O3 -mavx2" CFLAGS="-fopenmp -O3 -mavx2" '
configopts = "--enable-openmp --enable-static"

prebuildopts = " module unload cray-libsci && module load gcc/8.3.0 && "

#modextrapaths = {'CPATH': ['include/elpa_openmp-%(version)s/elpa']}
modextrapaths = {'CPATH': ['include/elpa_openmp-%(version)s']}

#maxparallel = 1
sanity_check_paths = {
    'files': ['lib/libelpa_openmp.a', 'lib/libelpa_openmp.so'],
    'dirs': ['bin', 'include/elpa_openmp-%(version)s/%(namelower)s', 'include/elpa_openmp-%(version)s/modules', 'lib/pkgconfig'],
}

moduleclass = 'math'
