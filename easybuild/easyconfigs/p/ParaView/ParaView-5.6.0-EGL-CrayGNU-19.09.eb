# CrayGNU version by Jean Favre (CSCS)
easyblock = 'CMakeMake'

name = 'ParaView'
version = '5.6.0'
versionsuffix = '-EGL'

homepage = 'http://www.paraview.org'
description = "ParaView is a scientific parallel visualizer."

toolchain = {'name': 'CrayGNU', 'version': '19.09'}
toolchainopts = {'usempi': True, 'pic': True, 'verbose': False}

source_urls = ['http://www.%(namelower)s.org/%(namelower)s-downloads/download.php?submit=Download&version=v%(version_major_minor)s&type=source&os=all&downloadFile=']
sources = ['%(name)s-v%(version)s.tar.gz']
patches = ['nek5000reader.patch']

builddependencies = [
    ('CMake', '3.14.1', '', True),
]
dependencies = [
    ('Boost', '1.70.0', '-python3'),
    ('h5py', '2.8.0', '-python3-serial'),
    ('ospray', '1.8.4'),
    ('cray-python/3.6.5.7', EXTERNAL_MODULE),
]

#configopts = '-DVTK_Group_MPI:BOOL=ON -DMPI_C_INCLUDE_PATH=${CRAY_MPICH_DIR}/include -DMPI_C_LIBRARIES=${CRAY_MPICH_DIR}/lib/libmpich.so '
configopts = '-DVTK_Group_MPI:BOOL=ON -DMPI_C_COMPILER=cc -DMPI_CXX_COMPILER=CC -DBUILD_TESTING:BOOL=OFF -DBUILD_EXAMPLES:BOOL=OFF -DPARAVIEW_ENABLE_CATALYST:BOOL=ON -DPARAVIEW_BUILD_PLUGIN_SierraPlotTools=OFF -DCMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO="-Wl,-rpath,/opt/cray/nvidia/default/lib64 -L/opt/cray/nvidia/default/lib64" -DPARAVIEW_ENABLE_PYTHON:BOOL=ON -DPYTHON_EXECUTABLE=${EBROOTPYTHON}/bin/python3 -DPARAVIEW_USE_MPI:BOOL=ON -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_SHARED_LIBS:BOOL=ON -DVTK_USE_SYSTEM_HDF5:BOOL=ON -DVTK_SMP_IMPLEMENTATION_TYPE=TBB -DTBB_INCLUDE_DIR:PATH=/opt/intel/compilers_and_libraries/linux/tbb/include -DTBB_LIBRARY_RELEASE:FILEPATH=${EBROOTOSPRAY}/lib/libtbb.so -DTBB_MALLOC_LIBRARY_RELEASE:FILEPATH=${EBROOTOSPRAY}/lib/libtbbmalloc.so -DVTK_RENDERING_BACKEND:STRING=OpenGL2 -DOPENGL_gl_LIBRARY=/opt/cray/nvidia/default/lib64/libGL.so -DOPENGL_INCLUDE_DIR=/opt/cray/nvidia/default/include -DPARAVIEW_ENABLE_XDMF3:BO0L=ON -DBoost_INCLUDE_DIR=${EBROOTBOOST}/include -DPARAVIEW_BUILD_QT_GUI:BOOL=OFF -DPARAVIEW_ENABLE_WEB:BOOL=OFF -DModule_vtkGeovisCore=ON -DModule_vtklibproj4=ON -DVTK_OPENGL_HAS_EGL:BOOL=ON -DEGL_INCLUDE_DIR=/users/jfavre/Projects/EGL/code-samples/posts/egl_OpenGl_without_Xserver -DEGL_LIBRARY=/opt/cray/nvidia/default/lib64/libEGL.so -DEGL_opengl_LIBRARY=/opt/cray/nvidia/default/lib64/libOpenGL.so -DVTK_USE_X:BOOL=OFF -DPARAVIEW_USE_OSPRAY:BOOL=ON -DOSPRAY_INSTALL_DIR="$EBROOTOSPRAY" -DPARAVIEW_EXTERNAL_PLUGIN_DIRS:STRING="/users/jfavre/Projects/BioMedical2;/users/jfavre/Projects/Jackson/src;/users/jfavre/Projects/Tipsy;/users/jfavre/Projects/Gadget;/users/jfavre/Projects/Adamek;/users/jfavre/Projects/Lucg;/users/jfavre/Projects/Elephant" -DPARAVIEW_BUILD_PLUGIN_pvNVIDIAIndeX:BOOL=ON '

maxparallel = 16

separate_build_dir = True
# Or consult https://gitlab.kitware.com/vtk/vtk/blob/master/Documentation/dev/git/data.md
# and download ExternalData to $EASYBUILD_SOURCEPATH and adjust -DExternalData_OBJECT_STORES accordingly
# Without internet connection, comment the following two lines (configopts and prebuildopts)
# configopts += '-DExternalData_OBJECT_STORES=%(builddir)s/ExternalData '
# The ParaView server can be cranky, test downloads are quite often failing, especially in the case
# of parallel downloads. Using ; insted of && gives a second chance to download the test files, if the
# first serial attempt would fail.
#prebuildopts = 'make VTKData ;'
modextravars = {
    'LD_LIBRARY_PATH': '/apps/common/UES/easybuild/sources/p/%(name)s/nvindex_default/linux-x86-64/lib:/opt/python/3.6.5.7/lib:$::env(LD_LIBRARY_PATH)',
    'NVINDEX_PVPLUGIN_HOME': '/apps/common/UES/easybuild/sources/p/%(name)s',
}

sanity_check_paths = {
    'files': ['bin/pvbatch', 'bin/pvserver'],
    'dirs': [],
}

moduleclass = 'vis'
