# @author: victor holanda rusu
easyblock = 'MakeCp'

name = 'Amber'
version = '18-14-14'
versionsuffix = '-cuda-10.1'

homepage = 'http://ambermd.org/'
description = """Amber (Assisted Model Building with Energy Refinement)
is software for performing molecular dynamics and structure prediction"""

toolchain = {'name': 'CrayGNU', 'version': '19.09'}
toolchainopts = {'verbose': False}

sources = [
    '/apps/common/UES/easybuild/sources/a/%(name)s/Amber18.tar.bz2',
    '/apps/common/UES/easybuild/sources/a/%(name)s/AmberTools18.tar.bz2',
]

builddependencies = [
    ('cudatoolkit/10.1.105_3.27-7.0.1.0_8.1__ga311ce7', EXTERNAL_MODULE),
    ('cray-hdf5/1.10.5.1', EXTERNAL_MODULE),
    ('cray-netcdf/4.6.3.1', EXTERNAL_MODULE),
]
dependencies = [
    ('bzip2', '1.0.6'),
    ('zlib', '1.2.11'),
    ('craype-accel-nvidia60', EXTERNAL_MODULE),
]

prebuildopts = "cd .. && mv amber18/* . && export AMBERHOME=%(builddir)s; export CUDA_HOME=$CUDATOOLKIT_HOME;./update_amber --update-to AmberTools/14 && ./update_amber --update-to %(name)s/14 && ./configure      -noX11 --skip-python --with-netcdf $EBROOTNETCDF gnu <<< N && echo 'PMEMD_CU_INCLUDES += -I$(MPICH_DIR)/include' >> config.h;make -j && make install && ./configure      -noX11 -openmp --skip-python --with-netcdf $EBROOTNETCDF gnu <<< N && echo 'PMEMD_CU_INCLUDES += -I$(MPICH_DIR)/include' >> config.h;make -j && make install && ./configure -mpi -noX11 -openmp --skip-python --with-netcdf $EBROOTNETCDF gnu <<< N && echo 'PMEMD_CU_INCLUDES += -I$(MPICH_DIR)/include' >> config.h;make -j && make install && ./configure -mpi -noX11         --skip-python --with-netcdf $EBROOTNETCDF gnu <<< N && echo 'PMEMD_CU_INCLUDES += -I$(MPICH_DIR)/include' >> config.h;make -j && make install && ./configure -cuda -mpi -noX11         --skip-python --with-netcdf $EBROOTNETCDF gnu <<< N && echo 'PMEMD_CU_INCLUDES += -I$(MPICH_DIR)/include' >> config.h;make -j && make install && "
buildopts = 'install'

# single make process since parallel builds might fail
maxparallel = 1

whatis = ['%(name)s 18 && AmberTools 18', 'AmberTools patch level 14', '%(name)s patch level 14']
buildininstalldir = True
modextravars = {'AMBERHOME': '%(builddir)s'}

sanity_check_paths = {
    'files': ['bin/pmemd.cuda.MPI', 'bin/pmemd.MPI', 'bin/pmemd'],
    'dirs': [],
}

moduleclass = 'bio'
